{
    "openapi": "3.0.1",
    "info": {
        "title": "Octane API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "security": [
        {
            "BearerApiKeyAuth": []
        }
    ],
    "tags": [
        {
            "name": "Customers",
            "description": "Operations related to Customers"
        },
        {
            "name": "Vendor",
            "description": "Operations related to Vendor"
        },
        {
            "name": "Measurements",
            "description": "Operations related to Measurements"
        },
        {
            "name": "Meters",
            "description": "Operations related to Meters"
        },
        {
            "name": "Price Plans",
            "description": "Operations related to Price Plans"
        },
        {
            "name": "Subscriptions",
            "description": "Operations related to Subscriptions"
        },
        {
            "name": "Price Lists",
            "description": "Operations related to Price Lists"
        }
    ],
    "paths": {
        "/v1/customers/": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get All Customers",
                "description": "Fetch all customers for a vendor",
                "operationId": "Get Customers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create Customer",
                "description": "Create a new Customer",
                "operationId": "Post Customers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "payload"
            }
        },
        "/v1/customers/{customer_name}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get Customer",
                "description": "Fetch a customer by their unique name",
                "operationId": "Get Customer",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update Customer",
                "description": "Update a single customer",
                "operationId": "Put Customer",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "payload"
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete Customer",
                "description": "Delete a customer",
                "operationId": "Delete Customer",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {}
                    }
                }
            }
        },
        "/v1/customers/{customer_name}/mappings": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get Measurement Mappings",
                "description": "Fetch all measurement mappings for a specific customer (by unique customer name).",
                "operationId": "Get CustomerMeasurementMapping",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerMeasurementMapping"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create Measurement Mappings",
                "description": "Create new measurement mappings for a customer. If no value_regex is passed, label existence is checked instead.\n\nThis action does not replace old mappings.",
                "operationId": "Post CustomerMeasurementMapping",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CustomerMeasurementMapping"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "payload"
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete Measurement Mappings",
                "description": "Delete all measurement mappings for a given customer.",
                "operationId": "Delete CustomerMeasurementMapping",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {}
                    }
                }
            }
        },
        "/v1/measurements/": {
            "post": {
                "tags": [
                    "Measurements"
                ],
                "summary": "Add Measurements",
                "description": "Send measurement(s) to Octane",
                "operationId": "Post Measurements",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "payload"
            }
        },
        "/v1/vendor/": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Get Vendor",
                "description": "Fetch a single vendor, based on the API key provided (via header auth)",
                "operationId": "Get Vendor",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Create Vendor",
                "description": "Create a new Vendor",
                "operationId": "Post Vendor",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vendor"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "payload"
            }
        }
    },
    "components": {
        "schemas": {
            "Customer": {
                "required": [
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "contact_info": {
                        "$ref": "#/components/schemas/ContactInfo"
                    }
                }
            },
            "ContactInfo": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "address_line_2": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "zipcode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "address_line_1": {
                        "type": "string"
                    }
                }
            },
            "CustomerMeasurementMapping": {
                "required": [
                    "label"
                ],
                "type": "object",
                "properties": {
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "value_regex": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Vendor": {
                "required": [
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "contact_info": {
                        "$ref": "#/components/schemas/ContactInfo"
                    }
                }
            },
            "Measurement": {
                "required": [
                    "time",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "value": {
                        "type": "number"
                    }
                }
            },
            "Meter": {
                "required": [
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "unit_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_incremental": {
                        "type": "boolean"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "meter_type": {
                        "type": "string"
                    }
                }
            },
            "MeterName": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "PricePlan": {
                "required": [
                    "description",
                    "display_name",
                    "name",
                    "period"
                ],
                "type": "object",
                "properties": {
                    "base_price": {
                        "type": "number",
                        "description": "Lowest denomination of currency. e.g. USD is represented as cents."
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PricePlanTag"
                        }
                    },
                    "period": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "metered_components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MeteredComponent"
                        }
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "description": {
                        "type": "string"
                    },
                    "trial": {
                        "$ref": "#/components/schemas/Trial"
                    }
                }
            },
            "PricePlanTag": {
                "required": [
                    "tag"
                ],
                "type": "object",
                "properties": {
                    "tag": {
                        "type": "string"
                    }
                }
            },
            "MeteredComponent": {
                "type": "object",
                "properties": {
                    "price_schemes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceScheme"
                        }
                    },
                    "meter": {
                        "$ref": "#/components/schemas/Meter"
                    }
                }
            },
            "PriceScheme": {
                "required": [
                    "display_name",
                    "name",
                    "prices"
                ],
                "type": "object",
                "properties": {
                    "unit_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "object",
                        "properties": {}
                    },
                    "scheme_type": {
                        "type": "string",
                        "description": "One of 'flat', 'volume', or 'stairstep'"
                    },
                    "time_unit_name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    }
                }
            },
            "Discount": {
                "required": [
                    "discount_type",
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "discount_type": {
                        "type": "string",
                        "description": "Type of the discount. One of 'flat' or 'percent'"
                    }
                }
            },
            "Trial": {
                "type": "object",
                "properties": {
                    "credit": {
                        "type": "number"
                    },
                    "time_length": {
                        "type": "number"
                    },
                    "time_unit_name": {
                        "type": "string"
                    }
                }
            },
            "Subscription": {
                "required": [
                    "price_plan_id"
                ],
                "type": "object",
                "properties": {
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "price_plan_id": {
                        "type": "integer"
                    }
                }
            },
            "CustomerName": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "PriceList": {
                "required": [
                    "display_name",
                    "name",
                    "prices"
                ],
                "type": "object",
                "properties": {
                    "unit_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "object",
                        "properties": {}
                    },
                    "scheme_type": {
                        "type": "string",
                        "description": "One of 'flat', 'volume', or 'stairstep'"
                    },
                    "time_unit_name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    }
                }
            }
        },
        "responses": {
            "MaskError": {
                "description": "When any error occurs on mask",
                "content": {}
            },
            "ParseError": {
                "description": "When a mask can't be parsed",
                "content": {}
            }
        },
        "securitySchemes": {
            "BearerApiKeyAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}